/*
 * Copyright (C) 2014 JOEL
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cs492.obsecurefinal.ui;

import cs492.obsecurefinal.algorithm.Sanitization;
import cs492.obsecurefinal.algorithm.SanitizationSimple;
import cs492.obsecurefinal.common.Agent;
import cs492.obsecurefinal.common.DatabaseAccess;
import cs492.obsecurefinal.common.Document;
import cs492.obsecurefinal.common.HintNoReplacements;
import cs492.obsecurefinal.common.HintWithReplacements;
import cs492.obsecurefinal.common.SanitizationHint;
import cs492.obsecurefinal.common.SanitizationResult;
import cs492.obsecurefinal.common.Sentence;
import cs492.obsecurefinal.metaintelligence.IntelligenceGraph;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButtonMenuItem;

/**
 *
 * @author JOEL
 */
public class MainWindow extends javax.swing.JFrame {

    Document currDocument;
    Agent currAgent;
    String[] allProfiles;
    DatabaseAccess dbAccess;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        dbAccess = new DatabaseAccess();
            
        if(dbAccess.isAvailable())
        {
            allProfiles = dbAccess.getProfileNames();
            
            Arrays.sort(allProfiles);

            for(String agentName: allProfiles)
            {
                JRadioButtonMenuItem rbItem = new JRadioButtonMenuItem(agentName); 
                rbItem.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        String ctrlName = evt.getActionCommand();
                        Agent agent = dbAccess.getProfileByName(ctrlName);
                        if(agent != null)
                            currAgent = agent;
                    }
                });
                jMenu4.add(rbItem);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 25), new java.awt.Dimension(0, 25), new java.awt.Dimension(32767, 25));
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jToolBar1.setRollover(true);

        jLabel1.setText("Obsecure");
        jToolBar1.add(jLabel1);
        jLabel1.getAccessibleContext().setAccessibleName("statusLabel");

        jToolBar1.add(filler1);

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Save");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Close");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Agents");

        jMenuItem4.setText("Manage Agents");
        jMenu2.add(jMenuItem4);

        jMenu4.setText("Select Agent");
        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Sanitization");

        jMenuItem5.setText("Sanitize Document");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Perform sanitization
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if(currDocument == null || currDocument.getText().equals(""))
        {
             JOptionPane.showMessageDialog(this, "Document missing or invalid");
        }
        else if(currAgent == null)
        {
             JOptionPane.showMessageDialog(this, "No agent selected");
        }
        else
        {
            Sanitization sanitization = new SanitizationSimple(currDocument, currAgent);
            SanitizationResult result = sanitization.sanitize();
            
            if(result != null)
            {
                for(SanitizationHint hint: result.getResults())
                {
                    SanitizationResultsDialog resultsDlg;
                    
                    if(hint instanceof HintWithReplacements)
                    {
                        HintWithReplacements hwr = (HintWithReplacements)hint;
                        
                        resultsDlg = new SanitizationResultsDialog(this, true, hwr.getEntity().getText(), 
                                                                   hwr.getEntity().getType().toString(), Double.toString(hwr.getMatchPercentage()), 
                                                                   hwr.getReplacements().getResults());
                        int chosenIndex = resultsDlg.showDialog();
                        if(chosenIndex >= 0)
                        {
                            // make replacement in document
                            Sentence sentence = hwr.getEntity().getSentence();
                            String newSentText = sentence.getText().replace(hwr.getEntity().getText(), hwr.getReplacements().getResults()[chosenIndex]);
                            
                            String newDocText = "";
                            
                            for(int i = 0; i < currDocument.getSentences().length; i++)
                            {
                                if(i != 0)
                                    newDocText += " ";
                                
                                if(i != hwr.getEntity().getSentence().getIndex())
                                {
                                    newDocText += currDocument.getSentences()[i];
                                }
                                else
                                {
                                    newDocText += newSentText;
                                }
                            }
                            
                            currDocument.setText(newDocText);
                            
                            jTextArea1.setText(newDocText);
                            
                            // inform meta intelligence of user's choice
                            IntelligenceGraph.getInstance().resolve(hwr.getEntity(), hwr.getReplacements().getResults()[chosenIndex]);
                        }
                    }
                    else if (hint instanceof HintNoReplacements)
                    {
                        HintNoReplacements hnr = (HintNoReplacements)hint;
                        resultsDlg = new SanitizationResultsDialog(this, true, hnr.getText(), 
                                                                   hnr.getAssociatedType().toString(), Double.toString(hnr.getMatchPercentage()), 
                                                                   null);
                        resultsDlg.showDialog();
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "No results were obtained");
            }
        }
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        int dlgResult = chooser.showDialog(this, "Open");
        if(dlgResult == JFileChooser.APPROVE_OPTION)
        {
            currDocument = new Document(chooser.getSelectedFile());
            if(currDocument.isValid())
                jTextArea1.setText(currDocument.getText());
            else
            {
                currDocument = null;
                jTextArea1.setText("");
            }
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
